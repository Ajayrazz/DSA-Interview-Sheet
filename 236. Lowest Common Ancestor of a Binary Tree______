/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        //Base Case
        if(root == null || root == p || root == q){
            return root;
        }

        //Iterating the left subtree
        TreeNode left = lowestCommonAncestor(root.left, p, q);
        //Iterating the right subtree
        TreeNode right = lowestCommonAncestor(root.right, p, q);

        //case 1
        if(left != null && right != null){
            return root;
        }

        //case 2
        if(left == null){
            return right;
        }
        else {
            return left;
        }
    }
}
