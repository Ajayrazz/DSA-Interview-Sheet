/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        return helper(preorder, 0, preorder.length - 1);
    }

    //Helper Function
    private TreeNode helper(int[] preorder, int left, int right){
        if(left > right){
            return null;
        }

        TreeNode root = new TreeNode(preorder[left]);
        int i;
        for(i = left + 1; i <= right; i++){
            if(root.val < preorder[i]){
                break;
            }
        }

        root.left = helper(preorder, left + 1, i - 1);
        root.right = helper(preorder, i, right);

        return root;
    }
}
