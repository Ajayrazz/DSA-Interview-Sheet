class Solution {
    // Function to find the nodes that are common in both BST.
    public static ArrayList<Integer> findCommon(Node r1, Node r2) {
        // code here
        ArrayList<Integer> result = new ArrayList<Integer>();
        Stack<Node> stack1 = new Stack<Node>();
        Stack<Node> stack2 = new Stack<Node>();
        
        while(true){
            if(r1 != null){
                stack1.push(r1);
                r1 = r1.left;
            }
            else if(r2 != null){
                stack2.push(r2);
                r2 = r2.left;
            }
            else if(!stack1.isEmpty() && !stack2.isEmpty()){
                r1 = stack1.peek();
                r2 = stack2.peek();
                
                
                if(r1.data == r2.data){
                    result.add(r1.data);
                    stack1.pop();
                    stack2.pop();
                    
                    r1 = r1.right;
                    r2 = r2.right;
                }
                else if(r1.data < r2.data){
                    stack1.pop();
                    r1 = r1.right;
                    r2 = null;
                }
                else if(r1.data > r2.data){
                    stack2.pop();
                    r2 = r2.right;
                    r1 = null;
                }
            } else {
                break;
            }
        }
        
        return result;
    }
}
