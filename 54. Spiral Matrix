class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int startrow = 0;
        int startcol = 0;
        int endrow = matrix.length - 1;
        int endcol = matrix[0].length - 1;

        List<Integer> list = new ArrayList<>();

        while(startrow <= endrow && startcol <= endcol) {
            //traversing top row
            for(int j = startcol; j <= endcol; j++) {
                list.add(matrix[startrow][j]);
            }

            //traversing the end column
            for(int i = startrow + 1; i <= endrow; i++) {
                list.add(matrix[i][endcol]);
            }

            //traversing the bottom row
            for(int j = endcol - 1; j >= startcol; j--) {
                if(startrow == endrow) {
                    break;
                }
                list.add(matrix[endrow][j]);
            }

            //traversing the startcol
            for(int i = endrow - 1; i > startrow; i--) {
                if(startcol == endcol) {
                    break;
                }
                list.add(matrix[i][startcol]);
            }

            startrow++;
            startcol++;
            endrow--;
            endcol--;
        }

        return list;
    }
}
